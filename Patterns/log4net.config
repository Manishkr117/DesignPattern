<log4net>
  <!--<appender name="FileAppender" type="log4net.Appender.RollingFileAppender">
    <file value="C:\Manhattan Associates\logs\log.txt" />
    <appendToFile value="true" />
    <rollingStyle value="Size" />
    <maxSizeRollBackups value="10" />
    <maximumFileSize value="100KB" />
    <staticLogFileName value="true" />-->
    <!--<appender name="FileAppender" type="log4net.Appender.FileAppender">
      <file type="log4net.Util.PatternString" value="\\H-DALAL-16\temp\Log_%property{log4net:HostName}_%processid.log" />
      <appendToFile value="true" />
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />-->
    <appender name="FileAppender" type="log4net.Appender.UdpAppender">
    <remoteAddress value="10.100.161.66" />
    <remotePort value="7070" />
    <!--more values you can get here http://logging.apache.org/log4net/release/sdk/?topic=html/T_log4net_Layout_PatternLayout.htm 
      but some values are very expense to get like callstack , method , line , username etc so use carefully-->
    <layout type="log4net.Layout.PatternLayout">
      <!--<conversionPattern value="[%date] [%thread] [%-5level] [%logger] [%property{machinename}] [%property{pid}] [%property{pname}] [%property{totalcpu}] [%property{totalthread}] [%property{totalmemory}] [%property{method}] [%property{environment}] [%property{user}] [%message]%newline" />-->
      <conversionPattern value="%level %date{ISO8601} %logger [%thread] [%property{pname}] [%property{pid}] [%property{log4net:HostName}] [%property{environment}] [%property{user}] %message %exception %newline"/>
    </layout>
  </appender>
  <!--root is parent logger always need to present. If child logger is not dfined always use parent logger -->
  <root>
    <level value="Debug"/>
    <appender-ref ref="FileAppender"/>
  </root>
  <!--for this logger parent is root-->
  <!--name of logger is namespace , it can be partial namespace also like Manh.ILS
   additivity is true by default which means use parent appender, see example below for Additivity false using its own appender
   if appender is define with Additivity true means doubling the log-->
  <logger name="Manh.ILS.IntegrationServices">
    <level value="Debug"/>
  </logger>
  <logger name="General.Mvc">
    <level value="Debug"/>
  </logger>

  <logger name="Manh.ILS.Reporting.BL">
    <level value="Debug"/>
  </logger>
  <!--name of logger is namespace + classname
   parent of this logger is Manh.ILS.IntegrationServices -->
  <logger name="Manh.ILS.IntegrationServices.BL.ResourceMethodInterceptor">
    <level value="Debug"/>
  </logger>
  <!--Additivity is set to true by default, that is children inherit the appenders of their ancestors by default. 
   If this variable is set to false then the appenders found in the ancestors of this logger are not used. However, 
   the children of this logger will inherit its appenders, unless the children have their additivity flag set to false too. See the user manual for more details.-->
  <logger name="Manh.ILS.IntegrationServices.BL.ResourceErrorHandler" additivity="false">
    <level value="Debug"/>
    <appender-ref ref="DebugAppender"/>
  </logger>

  <logger name="Manh.ILS.NHibernate.General">
    <level value="OFF"/>
  </logger>

  <logger name="NHibernate">
    <level value="OFF"/>
  </logger>
  <logger name="NHibernate.SQL">
    <level value="OFF" />
  </logger>


</log4net>